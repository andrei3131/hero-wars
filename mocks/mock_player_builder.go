// Code generated by MockGen and edited to support tests of fluent interface PlayerBuilder
// Source: github.com/andrei3131/hero-wars/player (interfaces: PlayerBuilder)

// Package mocks is a generated GoMock package.
package mocks

import (
	player "github.com/andrei3131/hero-wars/player"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPlayerBuilder is a mock of PlayerBuilder interface
type MockPlayerBuilder struct {
	ctrl     *gomock.Controller
	recorder *MockPlayerBuilderMockRecorder
}

// MockPlayerBuilderMockRecorder is the mock recorder for MockPlayerBuilder
type MockPlayerBuilderMockRecorder struct {
	mock *MockPlayerBuilder
}

// NewMockPlayerBuilder creates a new mock instance
func NewMockPlayerBuilder(ctrl *gomock.Controller) *MockPlayerBuilder {
	mock := &MockPlayerBuilder{ctrl: ctrl}
	mock.recorder = &MockPlayerBuilderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPlayerBuilder) EXPECT() *MockPlayerBuilderMockRecorder {
	return m.recorder
}

// Build mocks base method
func (m *MockPlayerBuilder) Build() (player.Player, player.Special) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Build")
	ret0, _ := ret[0].(player.Player)
	ret1, _ := ret[1].(player.Special)
	return ret0, ret1
}

// Build indicates an expected call of Build
func (mr *MockPlayerBuilderMockRecorder) Build() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Build", reflect.TypeOf((*MockPlayerBuilder)(nil).Build))
}

// SetDefence mocks base method
func (m *MockPlayerBuilder) SetDefence() player.PlayerBuilder {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetDefence")
	return m
}

// SetDefence indicates an expected call of SetDefence
func (mr *MockPlayerBuilderMockRecorder) SetDefence() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetDefence", reflect.TypeOf((*MockPlayerBuilder)(nil).SetDefence))
}

// SetHealth mocks base method
func (m *MockPlayerBuilder) SetHealth() player.PlayerBuilder {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetHealth")
	return m
}

// SetHealth indicates an expected call of SetHealth
func (mr *MockPlayerBuilderMockRecorder) SetHealth() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetHealth", reflect.TypeOf((*MockPlayerBuilder)(nil).SetHealth))
}

// SetLuck mocks base method
func (m *MockPlayerBuilder) SetLuck() player.PlayerBuilder {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetLuck")
	return m
}

// SetLuck indicates an expected call of SetLuck
func (mr *MockPlayerBuilderMockRecorder) SetLuck() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetLuck", reflect.TypeOf((*MockPlayerBuilder)(nil).SetLuck))
}

// SetSpecialCriticalStrike mocks base method
func (m *MockPlayerBuilder) SetSpecialCriticalStrike() player.PlayerBuilder {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetSpecialCriticalStrike")
	return m
}

// SetSpecialCriticalStrike indicates an expected call of SetSpecialCriticalStrike
func (mr *MockPlayerBuilderMockRecorder) SetSpecialCriticalStrike() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetSpecialCriticalStrike", reflect.TypeOf((*MockPlayerBuilder)(nil).SetSpecialCriticalStrike))
}

// SetSpecialResilience mocks base method
func (m *MockPlayerBuilder) SetSpecialResilience() player.PlayerBuilder {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetSpecialResilience")
	return m
}

// SetSpecialResilience indicates an expected call of SetSpecialResilience
func (mr *MockPlayerBuilderMockRecorder) SetSpecialResilience() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetSpecialResilience", reflect.TypeOf((*MockPlayerBuilder)(nil).SetSpecialResilience))
}

// SetSpeed mocks base method
func (m *MockPlayerBuilder) SetSpeed() player.PlayerBuilder {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetSpeed")
	return m
}

// SetSpeed indicates an expected call of SetSpeed
func (mr *MockPlayerBuilderMockRecorder) SetSpeed() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetSpeed", reflect.TypeOf((*MockPlayerBuilder)(nil).SetSpeed))
}

// SetStrength mocks base method
func (m *MockPlayerBuilder) SetStrength() player.PlayerBuilder {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetStrength")
	return m
}

// SetStrength indicates an expected call of SetStrength
func (mr *MockPlayerBuilderMockRecorder) SetStrength() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetStrength", reflect.TypeOf((*MockPlayerBuilder)(nil).SetStrength))
}
